/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ShareSample, ShareSampleInterface } from "../ShareSample";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_subscriptionRate",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InsufficientSubscriptionPool",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAlterPriceValue",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAlterSubscriptionPoolValue",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAssessmentFee",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeCollected",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "subscriptionPoolRemaining",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "liquidationStartedAt",
        type: "uint256",
      },
    ],
    name: "FeeCollected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "subject",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isBuy",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "shareAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "supply",
        type: "uint256",
      },
    ],
    name: "Trade",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "buyShares",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "decreaseSubscriptionPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "getBuyPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMinimumSubPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_supply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "getSellPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getShareSubject",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "getSubscriptionPoolRemaining",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "getTaxPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "increaseSubscriptionPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sellShares",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAccumulatedFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526103e860035561271060045561271060055534801561002257600080fd5b50604051610ef5380380610ef583398101604081905261004191610097565b600191909155600a80546001600160a01b039384166001600160a01b031991821617909155600b80549390921692169190911790556100d3565b80516001600160a01b038116811461009257600080fd5b919050565b6000806000606084860312156100ac57600080fd5b6100b58461007b565b9250602084015191506100ca6040850161007b565b90509250925092565b610e13806100e26000396000f3fe6080604052600436106100e85760003560e01c80635cf4ee911161008a578063ba730e5311610059578063ba730e5314610250578063c4d676a1146100ed578063d1a93d1814610270578063eb91d37e1461028357600080fd5b80635cf4ee91146101c55780636c9c2faf146101e557806370a08231146101fa5780637a2578c71461023057600080fd5b80632db302d3116100c65780632db302d3146101555780632e185ec71461017d57806344e5ea7b146101925780634ba8ae81146101b257600080fd5b806301814e14146100ed57806308d4db141461010e57806322a295a814610141575b600080fd5b3480156100f957600080fd5b5061010c610108366004610cce565b5050565b005b34801561011a57600080fd5b5061012e610129366004610cf0565b610298565b6040519081526020015b60405180910390f35b34801561014d57600080fd5b50600061012e565b34801561016157600080fd5b50600b546040516001600160a01b039091168152602001610138565b34801561018957600080fd5b5061010c6102ac565b34801561019e57600080fd5b5061012e6101ad366004610cf0565b6103b1565b61010c6101c0366004610cf0565b6103cb565b3480156101d157600080fd5b5061012e6101e0366004610cce565b610687565b3480156101f157600080fd5b5060085461012e565b34801561020657600080fd5b5061012e610215366004610d09565b6001600160a01b031660009081526007602052604090205490565b34801561023c57600080fd5b5061012e61024b366004610d09565b6107a8565b34801561025c57600080fd5b5061012e61026b366004610cf0565b6107e0565b61010c61027e366004610cf0565b6107f3565b34801561028f57600080fd5b5061012e610adc565b60006102a660085483610687565b92915050565b60006102b7336107a8565b9050600081116103025760405162461bcd60e51b8152602060048201526011602482015270125b9cdd59999a58da595b9d081c1bdbdb607a1b60448201526064015b60405180910390fd5b604051600090339083908381818185875af1925050503d8060008114610344576040519150601f19603f3d011682016040523d82523d6000602084013e610349565b606091505b50509050806103915760405162461bcd60e51b8152602060048201526014602482015273556e61626c6520746f2073656e642066756e647360601b60448201526064016102f9565b505033600090815260208190526040812081815542600190910155600955565b60006102a6826008546103c49190610d4f565b6001610687565b806008541161041c5760405162461bcd60e51b815260206004820152601a60248201527f43616e6e6f742073656c6c20746865206c61737420736861726500000000000060448201526064016102f9565b600081116104635760405162461bcd60e51b815260206004820152601460248201527343616e6e6f742073656c6c20302073686172657360601b60448201526064016102f9565b600061047c826008546104769190610d62565b83610687565b336000908152600760205260409020549091508211156104d45760405162461bcd60e51b8152602060048201526013602482015272496e73756666696369656e742073686172657360681b60448201526064016102f9565b33600081815260076020526040812054909182916104fa91906104f5610adc565b610af0565b33600090815260076020526040902054919350915061051a908590610d62565b33600090815260076020526040902055600854610538908590610d62565b6008553360009081526020819052604090208281554260019091015580600960008282546105669190610d4f565b9091555050600b546008547ff7dd8a134438de4c59401760e24ef5c6cc9c74583b2b022085697f3021e597689133916001600160a01b0390911690600090889088906105b3908390610d62565b604080516001600160a01b039788168152959096166020860152921515848601526060840191909152608083015260a082015290519081900360c00190a1604051600090339085908381818185875af1925050503d8060008114610633576040519150601f19603f3d011682016040523d82523d6000602084013e610638565b606091505b50509050806106805760405162461bcd60e51b8152602060048201526014602482015273556e61626c6520746f2073656e642066756e647360601b60448201526064016102f9565b5050505050565b60008083156106e257600661069d600186610d62565b6106a8906002610d75565b6106b3906001610d4f565b856106bf600182610d62565b6106c99190610d75565b6106d39190610d75565b6106dd9190610d8c565b6106e5565b60005b90506000841580156106f75750836001145b61076c57600684610709600188610d62565b6107139190610d4f565b61071e906002610d75565b610729906001610d4f565b6107338688610d4f565b8661073f60018a610d62565b6107499190610d4f565b6107539190610d75565b61075d9190610d75565b6107679190610d8c565b61076f565b60005b9050600061077d8383610d62565b9050613e8061079482670de0b6b3a7640000610d75565b61079e9190610d8c565b9695505050505050565b6001600160a01b03811660009081526007602052604081205460085482916107d8918591906104f5906001610687565b509392505050565b60006102a6826008546104769190610d62565b600081116108395760405162461bcd60e51b815260206004820152601360248201527243616e6e6f742062757920302073686172657360681b60448201526064016102f9565b600061084760085483610687565b9050600061086461085f846008546103c49190610d4f565b610b65565b9050813410156108af5760405162461bcd60e51b8152602060048201526016602482015275496e75736666696369656e74206e667420707269636560501b60448201526064016102f9565b60006108bb8334610d62565b336000818152600760205260408120549293509182916108dd916104f5610adc565b909250905060006108ee8385610d4f565b90508481116109365760405162461bcd60e51b8152602060048201526014602482015273125b9cdd59999a58da595b9d081c185e5b595b9d60621b60448201526064016102f9565b81600960008282546109489190610d4f565b909155506109fd9050610959610adc565b60408051606081018252428152602081019283526001805492820192835260028054918201815560005290517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace60039092029182015591517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf830155517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad090910155565b33600090815260076020526040902054610a18908890610d4f565b33600090815260076020526040902055600854610a36908890610d4f565b600890815533600081815260208190526040902083815542600191820155600b5492547ff7dd8a134438de4c59401760e24ef5c6cc9c74583b2b022085697f3021e59768936001600160a01b031691908b908b90610a95908390610d4f565b604080516001600160a01b039788168152959096166020860152921515848601526060840191909152608083015260a082015290519081900360c00190a150505050505050565b6000610aeb6008546001610687565b905090565b6001600160a01b0383166000908152602081815260408083208151808301909252805480835260019091015492820183905283928391610b3291879189610b82565b82519091508110610b4a57600093509150610b5d9050565b8151610b57908290610d62565b93509150505b935093915050565b600061271060035483610b789190610d75565b6102a69190610d8c565b6000808085815b600254811015610c5a57600060028281548110610ba857610ba8610dae565b9060005260206000209060030201604051806060016040529081600082015481526020016001820154815260200160028201548152505090508281600001511115610c47576000610c0782602001518584600001518560400151610c8b565b610c119089610d75565b9050610c1d8187610d4f565b955088861115610c3557859650505050505050610c83565b81519350610c438186610d4f565b9450505b5080610c5281610dc4565b915050610b89565b50610c69888242600154610c8b565b610c739086610d75565b610c7d9084610d4f565b93505050505b949350505050565b6000610c9d6301e13380612710610d75565b610ca78585610d62565b610cb18785610d75565b610cbb9190610d75565b610cc59190610d8c565b95945050505050565b60008060408385031215610ce157600080fd5b50508035926020909101359150565b600060208284031215610d0257600080fd5b5035919050565b600060208284031215610d1b57600080fd5b81356001600160a01b0381168114610d3257600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b808201808211156102a6576102a6610d39565b818103818111156102a6576102a6610d39565b80820281158282048414176102a6576102a6610d39565b600082610da957634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b600060018201610dd657610dd6610d39565b506001019056fea26469706673582212202b21db9df95b6af5b0a43bc13c646da3f970541cfc45cd23cd313b33fdc7849564736f6c63430008120033";

type ShareSampleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ShareSampleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ShareSample__factory extends ContractFactory {
  constructor(...args: ShareSampleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _withdrawAddress: string,
    _subscriptionRate: BigNumberish,
    owner: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ShareSample> {
    return super.deploy(
      _withdrawAddress,
      _subscriptionRate,
      owner,
      overrides || {}
    ) as Promise<ShareSample>;
  }
  override getDeployTransaction(
    _withdrawAddress: string,
    _subscriptionRate: BigNumberish,
    owner: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _withdrawAddress,
      _subscriptionRate,
      owner,
      overrides || {}
    );
  }
  override attach(address: string): ShareSample {
    return super.attach(address) as ShareSample;
  }
  override connect(signer: Signer): ShareSample__factory {
    return super.connect(signer) as ShareSample__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShareSampleInterface {
    return new utils.Interface(_abi) as ShareSampleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ShareSample {
    return new Contract(address, _abi, signerOrProvider) as ShareSample;
  }
}
