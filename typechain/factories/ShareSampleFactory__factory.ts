/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ShareSampleFactory,
  ShareSampleFactoryInterface,
} from "../ShareSampleFactory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "shareSampleAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "subRate",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sharesSubject",
        type: "address",
      },
    ],
    name: "ShareSampleCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sharesSubject",
        type: "address",
      },
    ],
    name: "createShareSample",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "deployedSubjects",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sharesSubject",
        type: "address",
      },
    ],
    name: "getContractForSharesSubject",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeployedContracts",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "newShareSample",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "subjectToContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61162b8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063a44c647e11610066578063a44c647e146100f6578063aa9a068f1461011f578063d572065514610135578063e1938dbb14610161578063f2fde38b1461017457600080fd5b80636d4ac8d314610098578063715018a6146100c85780638da5cb5b146100d25780639311d5c0146100e3575b600080fd5b6100ab6100a63660046105f4565b610187565b6040516001600160a01b0390911681526020015b60405180910390f35b6100d0610319565b005b6000546001600160a01b03166100ab565b6100ab6100f1366004610624565b61032d565b6100ab6101043660046105f4565b6002602052600090815260409020546001600160a01b031681565b610127610357565b6040516100bf929190610681565b6100ab6101433660046105f4565b6001600160a01b039081166000908152600260205260409020541690565b6001546100ab906001600160a01b031681565b6100d06101823660046105f4565b6104c4565b600061019161053d565b6001600160a01b0382811660009081526002602052604090205416156102175760405162461bcd60e51b815260206004820152603060248201527f436f6e747261637420616c7265616479206465706c6f79656420666f7220746860448201526f1a5cc81cda185c995cd4dd589a9958dd60821b60648201526084015b60405180910390fd5b81613a9883604051610228906105e7565b6001600160a01b03938416815260208101929092529091166040820152606001604051809103906000f080158015610264573d6000803e3d6000fd5b50600180546001600160a01b039283166001600160a01b031991821681178355858416600081815260026020526040808220805486169094179093556003805480870182559082527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180549094168217909355925490519293613a98939116917ff92d20db296d82ae44eda152eb6e3b0591ad1610e0f3ca351b160f25bb25268a91a450506001546001600160a01b031690565b61032161053d565b61032b6000610597565b565b6003818154811061033d57600080fd5b6000918252602090912001546001600160a01b0316905081565b600354606090819060008167ffffffffffffffff81111561037a5761037a6106af565b6040519080825280602002602001820160405280156103a3578160200160208202803683370190505b50905060008267ffffffffffffffff8111156103c1576103c16106af565b6040519080825280602002602001820160405280156103ea578160200160208202803683370190505b50905060005b838110156104b95760006003828154811061040d5761040d6106c5565b60009182526020808320909101546001600160a01b0390811680845260029092526040909220548651919350909116908290869085908110610451576104516106c5565b60200260200101906001600160a01b031690816001600160a01b03168152505080848481518110610484576104846106c5565b60200260200101906001600160a01b031690816001600160a01b031681525050505080806104b1906106db565b9150506103f0565b509094909350915050565b6104cc61053d565b6001600160a01b0381166105315760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161020e565b61053a81610597565b50565b6000546001600160a01b0316331461032b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161020e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610ef38061070383390190565b60006020828403121561060657600080fd5b81356001600160a01b038116811461061d57600080fd5b9392505050565b60006020828403121561063657600080fd5b5035919050565b600081518084526020808501945080840160005b838110156106765781516001600160a01b031687529582019590820190600101610651565b509495945050505050565b604081526000610694604083018561063d565b82810360208401526106a6818561063d565b95945050505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000600182016106fb57634e487b7160e01b600052601160045260246000fd5b506001019056fe60806040526103e860035561271060045561271060055534801561002257600080fd5b50604051610ef3380380610ef383398101604081905261004191610097565b600191909155600a80546001600160a01b039384166001600160a01b031991821617909155600b80549390921692169190911790556100d3565b80516001600160a01b038116811461009257600080fd5b919050565b6000806000606084860312156100ac57600080fd5b6100b58461007b565b9250602084015191506100ca6040850161007b565b90509250925092565b610e11806100e26000396000f3fe6080604052600436106100c25760003560e01c80636c9c2faf1161007f578063ba730e5311610059578063ba730e53146101e1578063c4d676a1146100c7578063d1a93d1814610201578063eb91d37e1461021457600080fd5b80636c9c2faf1461017657806370a082311461018b5780637a2578c7146101c157600080fd5b806301814e14146100c757806308d4db14146100e857806322a295a81461011a5780632e185ec71461012e5780634ba8ae81146101435780635cf4ee9114610156575b600080fd5b3480156100d357600080fd5b506100e66100e2366004610ccc565b5050565b005b3480156100f457600080fd5b50610108610103366004610cee565b610229565b60405190815260200160405180910390f35b34801561012657600080fd5b506000610108565b34801561013a57600080fd5b506100e661023d565b6100e6610151366004610cee565b610342565b34801561016257600080fd5b50610108610171366004610ccc565b6105fe565b34801561018257600080fd5b50600854610108565b34801561019757600080fd5b506101086101a6366004610d07565b6001600160a01b031660009081526007602052604090205490565b3480156101cd57600080fd5b506101086101dc366004610d07565b61071f565b3480156101ed57600080fd5b506101086101fc366004610cee565b610757565b6100e661020f366004610cee565b61076a565b34801561022057600080fd5b50610108610ada565b6000610237600854836105fe565b92915050565b60006102483361071f565b9050600081116102935760405162461bcd60e51b8152602060048201526011602482015270125b9cdd59999a58da595b9d081c1bdbdb607a1b60448201526064015b60405180910390fd5b604051600090339083908381818185875af1925050503d80600081146102d5576040519150601f19603f3d011682016040523d82523d6000602084013e6102da565b606091505b50509050806103225760405162461bcd60e51b8152602060048201526014602482015273556e61626c6520746f2073656e642066756e647360601b604482015260640161028a565b505033600090815260208190526040812081815542600190910155600955565b80600854116103935760405162461bcd60e51b815260206004820152601a60248201527f43616e6e6f742073656c6c20746865206c617374207368617265000000000000604482015260640161028a565b600081116103da5760405162461bcd60e51b815260206004820152601460248201527343616e6e6f742073656c6c20302073686172657360601b604482015260640161028a565b60006103f3826008546103ed9190610d4d565b836105fe565b3360009081526007602052604090205490915082111561044b5760405162461bcd60e51b8152602060048201526013602482015272496e73756666696369656e742073686172657360681b604482015260640161028a565b3360008181526007602052604081205490918291610471919061046c610ada565b610aee565b336000908152600760205260409020549193509150610491908590610d4d565b336000908152600760205260409020556008546104af908590610d4d565b6008553360009081526020819052604090208281554260019091015580600960008282546104dd9190610d60565b9091555050600b546008547ff7dd8a134438de4c59401760e24ef5c6cc9c74583b2b022085697f3021e597689133916001600160a01b03909116906000908890889061052a908390610d4d565b604080516001600160a01b039788168152959096166020860152921515848601526060840191909152608083015260a082015290519081900360c00190a1604051600090339085908381818185875af1925050503d80600081146105aa576040519150601f19603f3d011682016040523d82523d6000602084013e6105af565b606091505b50509050806105f75760405162461bcd60e51b8152602060048201526014602482015273556e61626c6520746f2073656e642066756e647360601b604482015260640161028a565b5050505050565b6000808315610659576006610614600186610d4d565b61061f906002610d73565b61062a906001610d60565b85610636600182610d4d565b6106409190610d73565b61064a9190610d73565b6106549190610d8a565b61065c565b60005b905060008415801561066e5750836001145b6106e357600684610680600188610d4d565b61068a9190610d60565b610695906002610d73565b6106a0906001610d60565b6106aa8688610d60565b866106b660018a610d4d565b6106c09190610d60565b6106ca9190610d73565b6106d49190610d73565b6106de9190610d8a565b6106e6565b60005b905060006106f48383610d4d565b9050613e8061070b82670de0b6b3a7640000610d73565b6107159190610d8a565b9695505050505050565b6001600160a01b038116600090815260076020526040812054600854829161074f9185919061046c9060016105fe565b509392505050565b6000610237826008546103ed9190610d4d565b600060085411806107855750600b546001600160a01b031633145b6107ea5760405162461bcd60e51b815260206004820152603060248201527f4f6e6c79207468652073686172657327207375626a6563742063616e2062757960448201526f2074686520666972737420736861726560801b606482015260840161028a565b600081116108305760405162461bcd60e51b815260206004820152601360248201527243616e6e6f742062757920302073686172657360681b604482015260640161028a565b600061083e600854836105fe565b9050600061086261085d846008546108569190610d60565b60016105fe565b610b63565b9050813410156108ad5760405162461bcd60e51b8152602060048201526016602482015275496e75736666696369656e74206e667420707269636560501b604482015260640161028a565b60006108b98334610d4d565b336000818152600760205260408120549293509182916108db9161046c610ada565b909250905060006108ec8385610d60565b90508481116109345760405162461bcd60e51b8152602060048201526014602482015273125b9cdd59999a58da595b9d081c185e5b595b9d60621b604482015260640161028a565b81600960008282546109469190610d60565b909155506109fb9050610957610ada565b60408051606081018252428152602081019283526001805492820192835260028054918201815560005290517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace60039092029182015591517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf830155517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad090910155565b33600090815260076020526040902054610a16908890610d60565b33600090815260076020526040902055600854610a34908890610d60565b600890815533600081815260208190526040902083815542600191820155600b5492547ff7dd8a134438de4c59401760e24ef5c6cc9c74583b2b022085697f3021e59768936001600160a01b031691908b908b90610a93908390610d60565b604080516001600160a01b039788168152959096166020860152921515848601526060840191909152608083015260a082015290519081900360c00190a150505050505050565b6000610ae960085460016105fe565b905090565b6001600160a01b0383166000908152602081815260408083208151808301909252805480835260019091015492820183905283928391610b3091879189610b80565b82519091508110610b4857600093509150610b5b9050565b8151610b55908290610d4d565b93509150505b935093915050565b600061271060035483610b769190610d73565b6102379190610d8a565b6000808085815b600254811015610c5857600060028281548110610ba657610ba6610dac565b9060005260206000209060030201604051806060016040529081600082015481526020016001820154815260200160028201548152505090508281600001511115610c45576000610c0582602001518584600001518560400151610c89565b610c0f9089610d73565b9050610c1b8187610d60565b955088861115610c3357859650505050505050610c81565b81519350610c418186610d60565b9450505b5080610c5081610dc2565b915050610b87565b50610c67888242600154610c89565b610c719086610d73565b610c7b9084610d60565b93505050505b949350505050565b6000610c9b6301e13380612710610d73565b610ca58585610d4d565b610caf8785610d73565b610cb99190610d73565b610cc39190610d8a565b95945050505050565b60008060408385031215610cdf57600080fd5b50508035926020909101359150565b600060208284031215610d0057600080fd5b5035919050565b600060208284031215610d1957600080fd5b81356001600160a01b0381168114610d3057600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561023757610237610d37565b8082018082111561023757610237610d37565b808202811582820484141761023757610237610d37565b600082610da757634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b600060018201610dd457610dd4610d37565b506001019056fea2646970667358221220f4e4d6fc67cfc64a5bf20735dc421229b0454dd1e5c8cd91ad3dc5e86a91824564736f6c63430008120033a264697066735822122029b23bb58208662d2a1a32e217f03d4138afce51e35be412e4b366e9b2ea904064736f6c63430008120033";

type ShareSampleFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ShareSampleFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ShareSampleFactory__factory extends ContractFactory {
  constructor(...args: ShareSampleFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<ShareSampleFactory> {
    return super.deploy(overrides || {}) as Promise<ShareSampleFactory>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ShareSampleFactory {
    return super.attach(address) as ShareSampleFactory;
  }
  override connect(signer: Signer): ShareSampleFactory__factory {
    return super.connect(signer) as ShareSampleFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShareSampleFactoryInterface {
    return new utils.Interface(_abi) as ShareSampleFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ShareSampleFactory {
    return new Contract(address, _abi, signerOrProvider) as ShareSampleFactory;
  }
}
